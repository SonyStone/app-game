import { GL_BUFFER_TYPE } from './buffer';
import { GL_DATA_TYPE } from './data-type';
import { GL_PROGRAM_PARAMETER } from './program-parameter';
import { GL_STATIC_VARIABLES as GL_CONST } from './static-variables';
import { GL_TEXTURES } from './textures';

export { GL_CONST as GL_STATIC_VARIABLES, GL_TEXTURES, GL_DATA_TYPE, GL_PROGRAM_PARAMETER, GL_BUFFER_TYPE };

/**
 * ClearBufferMask
 * A GLbitfield bitwise OR mask that indicates the buffers to be cleared. Possible values are:
 */
export const enum GL_CLEAR_MASK {
  /** mask that indicates the buffers to be cleared */
  COLOR_BUFFER_BIT = GL_CONST.COLOR_BUFFER_BIT,
  /** mask that indicates the buffers to be cleared */
  DEPTH_BUFFER_BIT = GL_CONST.DEPTH_BUFFER_BIT,
  /** mask that indicates the buffers to be cleared */
  STENCIL_BUFFER_BIT = GL_CONST.STENCIL_BUFFER_BIT
}

/**
 * BeginMode
 */
export const enum GL_DRAW_ARRAYS_MODE {
  /** Draws a single dot. */
  POINTS = GL_CONST.POINTS,

  /** Draws a straight line to the next vertex. */
  LINE_STRIP = GL_CONST.LINE_STRIP,

  /** Draws a straight line to the next vertex, and connects the last vertex back to the first. */
  LINE_LOOP = GL_CONST.LINE_LOOP,

  /** Draws a line between a pair of vertices. */
  LINES = GL_CONST.LINES,
  TRIANGLE_STRIP = GL_CONST.TRIANGLE_STRIP,
  TRIANGLE_FAN = GL_CONST.TRIANGLE_FAN,

  /** Draws a triangle for a group of three vertices. */
  TRIANGLES = GL_CONST.TRIANGLES
}

export const enum GL_SHADER_TYPE {
  /**
   * vertex shader
   */
  VERTEX_SHADER = GL_CONST.VERTEX_SHADER,

  /**
   * fragment shader
   */
  FRAGMENT_SHADER = GL_CONST.FRAGMENT_SHADER
}

export const enum GL_BUFFER_USAGE {
  STATIC_DRAW = GL_CONST.STATIC_DRAW,
  DYNAMIC_DRAW = GL_CONST.DYNAMIC_DRAW
}

export const enum GL_DRAW_ELEMENTS_TYPE {
  UNSIGNED_SHORT = GL_CONST.UNSIGNED_SHORT,
  UNSIGNED_INT = GL_CONST.UNSIGNED_INT
}

export const enum COLOR_ATTACHMENT {
  COLOR_ATTACHMENT0 = GL_CONST.COLOR_ATTACHMENT0,
  COLOR_ATTACHMENT1 = GL_CONST.COLOR_ATTACHMENT1,
  COLOR_ATTACHMENT2 = GL_CONST.COLOR_ATTACHMENT2,
  COLOR_ATTACHMENT3 = GL_CONST.COLOR_ATTACHMENT3,
  COLOR_ATTACHMENT4 = GL_CONST.COLOR_ATTACHMENT4,
  COLOR_ATTACHMENT5 = GL_CONST.COLOR_ATTACHMENT5,
  COLOR_ATTACHMENT6 = GL_CONST.COLOR_ATTACHMENT6,
  COLOR_ATTACHMENT7 = GL_CONST.COLOR_ATTACHMENT7,
  COLOR_ATTACHMENT8 = GL_CONST.COLOR_ATTACHMENT8,
  COLOR_ATTACHMENT9 = GL_CONST.COLOR_ATTACHMENT9,
  COLOR_ATTACHMENT10 = GL_CONST.COLOR_ATTACHMENT10,
  COLOR_ATTACHMENT11 = GL_CONST.COLOR_ATTACHMENT11,
  COLOR_ATTACHMENT12 = GL_CONST.COLOR_ATTACHMENT12,
  COLOR_ATTACHMENT13 = GL_CONST.COLOR_ATTACHMENT13,
  COLOR_ATTACHMENT14 = GL_CONST.COLOR_ATTACHMENT14,
  COLOR_ATTACHMENT15 = GL_CONST.COLOR_ATTACHMENT15
}

/** BlendingFactorDest */
export const enum BLENDING_FACTOR_DEST {
  ZERO = GL_CONST.ZERO,
  ONE = GL_CONST.ONE,
  SRC_COLOR = GL_CONST.SRC_COLOR,
  ONE_MINUS_SRC_COLOR = GL_CONST.ONE_MINUS_DST_COLOR,
  SRC_ALPHA = GL_CONST.SRC_ALPHA,
  ONE_MINUS_SRC_ALPHA = GL_CONST.ONE_MINUS_SRC_ALPHA,
  DST_ALPHA = GL_CONST.DST_ALPHA,
  ONE_MINUS_DST_ALPHA = GL_CONST.ONE_MINUS_DST_ALPHA
}

/** BlendingFactorSrc */
export const enum BLENDING_FACTOR_SRC {
  ZERO = GL_CONST.ZERO,
  ONE = GL_CONST.ONE,
  DST_COLOR = GL_CONST.DST_COLOR,
  ONE_MINUS_DST_COLOR = GL_CONST.ONE_MINUS_DST_COLOR,
  SRC_ALPHA_SATURATE = GL_CONST.SRC_ALPHA_SATURATE,
  SRC_ALPHA = GL_CONST.SRC_ALPHA,
  ONE_MINUS_SRC_ALPHA = GL_CONST.ONE_MINUS_SRC_ALPHA,
  DST_ALPHA = GL_CONST.DST_ALPHA,
  ONE_MINUS_DST_ALPHA = GL_CONST.ONE_MINUS_DST_ALPHA
}

/** BlendEquationSeparate */
export const enum BLEND_EQUATION_SEPARATE {
  FUNC_ADD = GL_CONST.FUNC_ADD,
  BLEND_EQUATION = GL_CONST.BLEND_EQUATION,
  BLEND_EQUATION_RGB = GL_CONST.BLEND_EQUATION_RGB,
  BLEND_EQUATION_ALPHA = GL_CONST.BLEND_EQUATION_ALPHA
}

/* Framebuffer Object. */
export const enum GL_FRAMEBUFFER_OBJECT {
  FRAMEBUFFER = GL_CONST.FRAMEBUFFER,
  RENDERBUFFER = GL_CONST.RENDERBUFFER
}
